version: '3'

services:

  agent:
    image: portainer/agent:latest
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [ node.platform.os == linux ]

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - data:/data
    networks:
      - agent_network
      - proxy-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=HOST(`localhost`) && PathPrefix(`/portainer{regex:$$|/.*}`)"
        - "traefik.http.routers.portainer.entrypoints=web"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.routers.portainer-edge.rule=HOST(`localhost`) && PathPrefix(`/edge{regex:$$|/.*}`)"
        - "traefik.http.routers.portainer-edge.entrypoints=portainer"
        - "traefik.http.services.portainer-edge.loadbalancer.server.port=8000"
        - "traefik.http.routers.portainer-edge.service=edge"

networks:
  proxy-net:
    external: true
  agent_network:
    external: true

volumes:
  data:
